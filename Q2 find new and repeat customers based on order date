/*
create table customer_orders (
order_id integer,
customer_id integer,
order_date date,
order_amount integer
);

insert into customer_orders values
(1,100,'2022-01-01',2000),
(2,200,'2022-01-01' ,2500),
(3,300,'2022-01-01',2100),
(4,100,'2022-01-02' ,2000),
(5,400,'2022-01-02' ,2200),
(6,500,'2022-01-02',2700),
(7,100,'2022-01-03',3000),
(8,400,'2022-01-03',1000),
(9,600,'2022-01-03',3000)
;
*/

--intuitive approach
/*with first_visit as
(
select customer_id , min(order_date) as min_purchase_dt from customer_orders group by customer_id
 ),
 visit_flag as 
 (
 select co.*, 
 case when fv.min_purchase_dt= co.order_date then 1 else 0 end as repeat_cnt
 ,case when fv.min_purchase_dt!= co.order_date then 1 else 0 end as new_cnt
 from Customer_orders  co 
   join first_visit fv 
   on co.customer_id = fv.customer_id
   )
 select order_date , sum(repeat_cnt) as repeat_customer_count, sum(new_cnt) as new_customer_count from visit_flag group by order_date;
 */
 
 --optimized approach
 with first_visit as
(
select customer_id , min(order_date) as min_purchase_dt from customer_orders group by customer_id
 )
 select co.order_date, 
 sum(case when fv.min_purchase_dt= co.order_date then 1 else 0 end) as repeat_cnt
 ,sum(case when fv.min_purchase_dt!= co.order_date then 1 else 0 end) as new_cnt
 from Customer_orders  co 
   join first_visit fv 
   on co.customer_id = fv.customer_id
   group by co.order_date
   
